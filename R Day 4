■ emp3.csv 를 R studio 켜면 자동으로 로드 되겠금 하는 방법

메모장을 관리자 권한으로 실행하고 

C:\Program Files\R\R-자신의버전번호\etc\Rprofile.site 파일을 엽니다.

그리고 맨 아래줄에 다음의 내용을 추가하고 저장한 다음 Rstudio 를 실행합니다.

library(utils)
setwd("d:\\data")
emp <- read.csv("emp3.csv")
emp

■ 어제 배웠던 내용  

 R 에서 데이터 시각화 
         
        1.  막대 그래프
        2.  원형 그래프
        3.  라인 그래프 

 현업에서 일할때 시각화 할 일이 많은데 지금 당장 머신러닝 수업 때도 시각화
 할일이 많고 빅데이터 기사 때도 데이터 시각화를 해야하므로 
 선생님이 예전에 옆자리에서 일하셨던 특급 기술자분이 일했던 방법으로
 자동화 스크립트를 생성하겠습니다. 

■ 막대 그래프를 자동화 스크립트로 구현하기

bar <- function() {      # R 에서 함수 만드는 코드 

  fname <- file.choose()  #  윈도우 탐색기 여는 코드

  table <- read.csv(fname, header=T, stringsAsFactor=F )
  
  print(data.table(colnames(table))) # 컬럼명을 번호와 함께 출력하는 코드
  
  xcol_num <- as.numeric(readline('x축 컬럼 번호: ')) # 번호 물어보기
  ycol_num <- as.numeric(readline('y축 컬럼 번호: ')) # 번호 물어보기 
  
  xcol <- colnames(table[xcol_num])   # x축 컬럼명을 담는 코드
  ycol <- colnames(table[ycol_num])   # y축 컬럼명을 담는 코드 
  
  xcol2 <- table[,xcol] # 예: emp[, "empno"] 
  ycol2 <- table[,ycol] #  y 축 컬럼의 데이터를 ycol2 에 넣는다. 
  y_max <- max(ycol2)  + 100

  barplot(ycol2, main=paste(xcol,'과',ycol,'의 막대 그래프'), names.arg=xcol2,
             col=c('Green Yellow'), density=80, ylim= c(0,y_max) , beside=T)
}

■ Q-148.  위에 막대그래프 자동화 코드를 이용해서 원형 그래프 자동화 함수를
생성하시오 ! ( 함수 이름은   pie2 )

pie2 <- function() {      # R 에서 함수 만드는 코드 

  fname <- file.choose()  #  윈도우 탐색기 여는 코드

  table <- read.csv(fname, header=T, stringsAsFactor=F )
  
  print(data.table(colnames(table))) # 컬럼명을 번호와 함께 출력하는 코드
  
  xcol_num <- as.numeric(readline('x축 컬럼 번호: ')) # 번호 물어보기
  ycol_num <- as.numeric(readline('y축 컬럼 번호: ')) # 번호 물어보기 
  
  xcol <- colnames(table[xcol_num])   # x축 컬럼명을 담는 코드
  ycol <- colnames(table[ycol_num])   # y축 컬럼명을 담는 코드 
  
  xcol2 <- table[,xcol] #  x 축 컬럼의 데이터를 xcol2 에 넣는다. 
  ycol2 <- table[,ycol] #  y 축 컬럼의 데이터를 ycol2 에 넣는다. 

  y_labels <- round( ycol2/ sum(ycol2) *100, 1)
  y_labels2 <-paste(xcol2, y_labels, '%')

 pie( ycol2 , main=paste(ycol ,'의 원형 그래프') , labels=y_labels2, col=rainbow(15) ) 

}

■ Q-149.  아래의 메뉴 코드를 실행하시오 !

x1 <- menu( c('막대 그래프', '원형 그래프') )
x1

■ Q-150.  아래의 switch 코드를 실행하시오 !
 
my_func <- function() {  
 
 bar <- function() {              # R 에서 함수 만드는 코드 

  fname <- file.choose()      #  윈도우 탐색기 여는 코드

  table <- read.csv(fname, header=T, stringsAsFactor=F )
  
  print(data.table(colnames(table))) # 컬럼명을 번호와 함께 출력하는 코드
  
  xcol_num <- as.numeric(readline('x축 컬럼 번호: '))     # 번호 물어보기
  ycol_num <- as.numeric(readline('y축 컬럼 번호: '))    # 번호 물어보기 
  
  xcol <- colnames(table[xcol_num])              # x축 컬럼명을 담는 코드
  ycol <- colnames(table[ycol_num])             # y축 컬럼명을 담는 코드 
  
  xcol2 <- table[,xcol] # 예: emp[, "empno"] 
  ycol2 <- table[,ycol] #  y 축 컬럼의 데이터를 ycol2 에 넣는다. 
  y_max <- max(ycol2)  + 100

  barplot(ycol2, main=paste(xcol,'과',ycol,'의 막대 그래프'), names.arg=xcol2,
             col=c('Green Yellow'), density=80, ylim= c(0,y_max) , beside=T)
}


pie2 <- function() {                       # R 에서 함수 만드는 코드 

  fname <- file.choose()              #  윈도우 탐색기 여는 코드

  table <- read.csv(fname, header=T, stringsAsFactor=F )
  
  print(data.table(colnames(table)))           # 컬럼명을 번호와 함께 출력하는 코드
  
  xcol_num <- as.numeric(readline('x축 컬럼 번호: ')) # 번호 물어보기
  ycol_num <- as.numeric(readline('y축 컬럼 번호: ')) # 번호 물어보기 
  
  xcol <- colnames(table[xcol_num])   # x축 컬럼명을 담는 코드
  ycol <- colnames(table[ycol_num])   # y축 컬럼명을 담는 코드 
  
  xcol2 <- table[,xcol]       #  x 축 컬럼의 데이터를 xcol2 에 넣는다. 
  ycol2 <- table[,ycol]     #  y 축 컬럼의 데이터를 ycol2 에 넣는다. 

  y_labels <- round( ycol2/ sum(ycol2) *100, 1)
  y_labels2 <-paste(xcol2, y_labels, '%')

 pie( ycol2 , main=paste(ycol ,'의 원형 그래프') , labels=y_labels2, col=rainbow(15) ) 

}

x1 <- menu( c('막대 그래프', '원형 그래프'),
                 title=" 숫자를 선택하세요 ~ "  )
switch( x1,
         gp1 = {   bar()   },
         gp2 = {   pie2()  }
         )
                               }   

my_func()

■ Q-151.  cars2.csv  를 생성하고 cars2.csv 의 시계열 데이터로 라인 그래프를
그리시오 !

cars <- read.csv("cars.csv")
y_max <- max(cars$cnt2) + 3
plot( cars$cnt2, type='o', col='blue', ylim=c(0,y_max), axes=FALSE, ann=FALSE )
axis( 1,  at=1:5,  lab=cars$date2 )
axis(2)  # y 축 생성 
legend( 2, 10, 'car', col='blue', cex=0.8, pch=21, lty=1  ) 

■ Q-152.  위의 스크립트를 이용해서 윈도우에서 csv 파일을 불러와서 라인 그래프를
그리는 함수를 line2 라는 이름을 생성하시오 !

line2 <- function() {                         # R 에서 함수 만드는 코드 

  fname <- file.choose()                 #  윈도우 탐색기 여는 코드

  table <- read.csv(fname, header=T, stringsAsFactor=F )
  
  print(data.table(colnames(table)))      # 컬럼명을 번호와 함께 출력하는 코드
   
  xcol_num <- as.numeric(readline('x축 컬럼 번호: '))      # 번호 물어보기
  ycol_num <- as.numeric(readline('y축 컬럼 번호: '))      # 번호 물어보기 
  
   xcol <- colnames(table[xcol_num])         # x축 컬럼명을 담는 코드
   ycol <- colnames(table[ycol_num])       # y축 컬럼명을 담는 코드 
 
   xcol2 <- table[,xcol] #  x 축 컬럼의 데이터를 xcol2 에 넣는다. 
   ycol2 <- table[,ycol] #  y 축 컬럼의 데이터를 ycol2 에 넣는다.

   y_max2 <- max(ycol2) -1
   y_max <- max(ycol2)  +3 
   y_max 
   plot( ycol2, type='o', col='blue', ylim=c(0,y_max), axes=FALSE, ann=FALSE )
 
  axis( 1,  at=1:5,  lab= xcol2 )
  axis(2)  # y 축 생성 
  legend( 2, y_max2,  table , col='blue', cex=0.8, pch=21, lty=1  ) 

}


■ Q-153.  my_func 함수(그래프 통합 코드 함수) 에 line2  함수로 만든 라인 그래프를
세번째로 추가 시키시오 

문제150번 코드 전체를 가져옵니다.

my_func <- function() {  
 
 bar <- function() {             # R 에서 함수 만드는 코드 

  fname <- file.choose()        #  윈도우 탐색기 여는 코드

  table <- read.csv(fname, header=T, stringsAsFactor=F )
  
  print(data.table(colnames(table))) # 컬럼명을 번호와 함께 출력하는 코드
  
  xcol_num <- as.numeric(readline('x축 컬럼 번호: ')) # 번호 물어보기
  ycol_num <- as.numeric(readline('y축 컬럼 번호: ')) # 번호 물어보기 
  
  xcol <- colnames(table[xcol_num])   # x축 컬럼명을 담는 코드
  ycol <- colnames(table[ycol_num])   # y축 컬럼명을 담는 코드 
  
  xcol2 <- table[,xcol]                      # 예: emp[, "empno"] 
  ycol2 <- table[,ycol]                      #  y 축 컬럼의 데이터를 ycol2 에 넣는다. 
  y_max <- max(ycol2)  + 100

  barplot(ycol2, main=paste(xcol,'과',ycol,'의 막대 그래프'), names.arg=xcol2,
             col=c('Green Yellow'), density=80, ylim= c(0,y_max) , beside=T)
}


pie2 <- function() {      # R 에서 함수 만드는 코드 

  fname <- file.choose()  #  윈도우 탐색기 여는 코드

  table <- read.csv(fname, header=T, stringsAsFactor=F )
  
  print(data.table(colnames(table))) # 컬럼명을 번호와 함께 출력하는 코드
  
  xcol_num <- as.numeric(readline('x축 컬럼 번호: ')) # 번호 물어보기
  ycol_num <- as.numeric(readline('y축 컬럼 번호: ')) # 번호 물어보기 
  
  xcol <- colnames(table[xcol_num])   # x축 컬럼명을 담는 코드
  ycol <- colnames(table[ycol_num])   # y축 컬럼명을 담는 코드 
  
  xcol2 <- table[,xcol] #  x 축 컬럼의 데이터를 xcol2 에 넣는다. 
  ycol2 <- table[,ycol] #  y 축 컬럼의 데이터를 ycol2 에 넣는다. 

  y_labels <- round( ycol2/ sum(ycol2) *100, 1)
  y_labels2 <-paste(xcol2, y_labels, '%')

 pie( ycol2 , main=paste(ycol ,'의 원형 그래프') , labels=y_labels2, col=rainbow(15) ) 

}

line2 <- function() {      # R 에서 함수 만드는 코드 

  fname <- file.choose()  #  윈도우 탐색기 여는 코드

  table <- read.csv(fname, header=T, stringsAsFactor=F )
  
  print(data.table(colnames(table))) # 컬럼명을 번호와 함께 출력하는 코드
   
  xcol_num <- as.numeric(readline('x축 컬럼 번호: ')) # 번호 물어보기
  ycol_num <- as.numeric(readline('y축 컬럼 번호: ')) # 번호 물어보기 
  
   xcol <- colnames(table[xcol_num])   # x축 컬럼명을 담는 코드
   ycol <- colnames(table[ycol_num])   # y축 컬럼명을 담는 코드 
 
   xcol2 <- table[,xcol] #  x 축 컬럼의 데이터를 xcol2 에 넣는다. 
   ycol2 <- table[,ycol] #  y 축 컬럼의 데이터를 ycol2 에 넣는다.

   y_max2 <- max(ycol2) -1
   y_max <- max(ycol2)  +3 
   y_max 
   plot( ycol2, type='o', col='blue', ylim=c(0,y_max), axes=FALSE, ann=FALSE )
 axis( 1,  at=1:5,  lab= xcol2 )
 axis(2)  # y 축 생성 
  legend( 2, y_max2,  table , col='blue', cex=0.8, pch=21, lty=1  ) 
}

x1 <- menu( c('막대 그래프', '원형 그래프', '라인 그래프' ),
                     title=" 숫자를 선택하세요 ~ "  )
switch( x1,
         gp1 = {   bar()   },
         gp2 = {   pie2()  },
         gp3 = {   line2() } 
         )
                               }   

■ R 에서 히스토그램 그래프 그리기 

※ 빅데이터 기사시험의 히스토그램 그래프의 정의 ?

히스토그램은 하나의 속성에 대한 데이터의 분포를 시각적으로 
표현하는 그래프입니다.
   
예제: 머신러닝 R 책의 2장의 히스토그램 그래프 설명의 예제 

중고차 가격 데이터 : usedcars.csv  

usedcars <- read.csv("usedcars.csv")
View(usedcars)

1. 전체 건수를 확인합니다.
nrow(usedcars) 

2. 컬럼이 몇개 인지 확인합니다.
ncol(usedcars) 

3. 각 컬럼들의 데이터에 대한 통계정보를 확인하시오.
summary(usedcars)

4. 중고차 가격에 대해서 히스토그램 그래프를 그리시오 !

hist(usedcars$price)

5. 히스토그램 x 축의 간격이 좀더 이해하기 쉽게 나올 수 있도록 
그래프를 조정하시오 

hist(usedcars$price, at=seq(0, 24000, by=2000),breaks= seq(0, 24000, by=2000) )

■ Q-154.   중고차의 마일리지로 히스토그램 그래프를 그리시오 !
(그래프와 코드를 카페에 올리고 검사받으세요 )

max_m = max(usedcars$mileage)*1.1

주행거리=usedcars$mileage

hist( 주행거리, 
, breaks=seq(0, max_m , by=10000) , 
at=seq(0, max_m ,by=10000), main="중고차 주행거리", col='orange', density=80 )

■ Q-155. 위의 그래프 코드를 함수로 생성해서 윈도우 탐색기가 열리게 하면서
데이터를 불러와서 히스토그램 그래프가 그려지게 하시오 !
 ( 함수이름:  hist2  )

hist2 <- function() {                  # R 에서 함수 만드는 코드 

  fname <- file.choose()            #  윈도우 탐색기 여는 코드

  table <- read.csv(fname, header=T, stringsAsFactor=F )
  
  print(data.table(colnames(table))) # 컬럼명을 번호와 함께 출력하는 코드
   
  xcol_num <- as.numeric(readline('x축 컬럼 번호: ')) # 번호 물어보기
  
   xcol <- colnames(table[xcol_num])   # x축 컬럼명을 담는 코드
 
   xcol2 <- table[,xcol] #  x 축 컬럼의 데이터를 xcol2 에 넣는다. 
   max_m = max(xcol2)*1.1 

    hist( xcol2 , main= paste(xcol,'의 히스토그램 그래프') , col='orange', density=80 )

}

■ 사분위수 그래프  ( 박스 플롯 그래프)

 박스플롯은 많은 데이터를 그림을 이용하여 집합의 범위와 중앙값을 빠르게
 확인 할 수 있으며 또한 통계적으로 이상치값이 있는지 빠르게 확인이 가능한
 시각화 기법입니다.

 평균값과 중앙값과 최빈값만으로는 데이터 분석을 하기 부족한 경우가 있다.
 평균 데이터는 데이터의 중심이 어디즘인지 알려주지만 특정 데이터가 평균을
  중심으로 어떻게 분포가 되어있는지는 알려주지 않습니다.

 예제:  어느 농구단의 감독이 아래의 3명의 농구선수중에 한명을 선택하려고 합니다.
            아래의 3명의 선수의 게임별 점수를 가지고 한명을 고른다면 어떤 선수를
             골라야 하나 ?

▩ 농구 선수 3명이 각각의 게임당 득점한 점수  

x1 <- c(7,8,9,9,10,10,11,11,12,13)
x2 <- c(7,9,9,10,10,10,10,11,11,13 )
x3 <- c(1,1,7,7,10,10,10,11,13,30 )

■ Q-156.  위의 농구선수 3명의 득점 점수의 평균값, 중앙값, 최빈값을
각각 구하시오 !

x1 <- c(7,8,9,9,10,10,11,11,12,13)
x2 <- c(7,9,9,10,10,10,10,11,11,13 )
x3 <- c(1,1,7,7,10,10,10,11,13,30 )

mean(x1)
mean(x2)
mean(x3)

median(x1)
median(x2)
median(x3)

names( table(x1) ) [ table(x1) == max(table(x1)) ]  # 9, 10, 11
names( table(x2) ) [ table(x2) == max(table(x2)) ]  # 10
names( table(x3) ) [ table(x3) == max(table(x3)) ]  # 10 

설명:    보통은 위의 3개의 통계치로 한명의 선수를 선택할 수 있는데
              위와 같은 경우는 평균값, 중앙값, 최빈값으로는 특정 선수를 선택하기가
              곤란한 경우 입니다. 

          이런 경우에 필요한 데이터 분석 방법은 ?

각 선수의 점수의 데이터의 분포가 어떻게 분포 되었는지 분포 방식을 
측정할 수 있으면 결정을 내릴 때 크게 도움을 줄 수 있습니다.

■ 데이터의 분포를 확인하는 방법 

 1. 범위 
 2. 사분위수 범위
 3. 히스토그램 그래프 

■ 범위 

데이터의 폭을 확인할 때 사용합니다. 

   range(x1)   # 7  13
   range(x2)   # 7  13
   range(x3)   # 1  30

범위는 그 자체로는 데이터의 폭만 설명할 뿐 그 안에서 데이터가 분포되는 방식은
설명해주지 않습니다. 특히 이상치에 민감하다.

3번째 선수의 경우 어쩌다 한번 잘한 게임(30점) 인 이상치 때문에 범위가 넓어져 버렸다. 그래서 분석하기가 어려워 졌다. 그러므로 이상치로 부터 멀어질 필요가 있습니다.이상치로 부터 멀어지고 가운데 있는 데이터에만 집중하게 해주는게 사분위수 범위 입니다. 

■ Q-157. 이상치 데이터(30점) 을 가지고 있는 3번째 선수의 점수 데이터로 4분위수
그래프를 그리시오 !

a <- boxplot(x3)
a
a$stats

> a$stats
     [,1]
[1,]    1   <--- 하한값 
[2,]    7   <--- 하한 사분위수 
[3,]   10   <--- 중앙값 
[4,]   11    <--- 상한 사분위수
[5,]   13   <--- 상한값 

■ Q-158. 위와 같이 사분위수 그래프를 그리면서 위의 통계치를 확인하는 이유가 
무엇인가 ?

답 :   이상치 때문이다.  이상치를 제거하고 가운데 50% 의 데이터에만 집중함으로써
          문제를 우회할 수 있다.

머신러닝 모델을 학습 시킬때도 이상치를 제거하고 머신러닝 모델을 학습시킨 결과가 훨씬 더 학습률이 좋아서 모델의 판별 정확도가 더 높은 경우가 많습니다. 

■ Q-159. 3명의 농구 선수들의 점수를 가지고 사분위수 그래프를 그리는데
1번, 2번, 3번 선수의 그래프를 하나의 결과로 나오게 출력하시오 !

boxplot(x1,x2,x3)
 
설명:   그래프를 보면 1, 2번 선수가 3번 선수보다 상대적으로 좁은 범위를 
가지고 있습니다. 3번 선수는 넓은 범위를 가지고 있고 3번 선수는
2번 선수에 비해 훨씬 높은 점수(30점) 을 득점했지만 다른 경우에는
훨씬 낮은 점수에 대한 기록도 보입니다.  그래서 1, 2번 선수가 더 일관성이 있고
대부분의 경우에 3번 선수보다 더 높은점수를 기록을 했습니다. 
그래서 만약 세명의 선수중에 한명의 선수를 고른다면 1번과 2번 선수에서 고를것
입니다.

선배기수: mc365 에서 데이터 분석 요청이 들어와서 데이터 분석을 하고 
                   시각화와 설명을 함께 문서로 만들어서 가져가서 발표

* 데이터를 통계치로 분석하는 순서 

평균값 ----> 중앙값 ----> 최빈값 ----> 범위 ---->사분위수 범위 --->분산값---> 표준편차
 ↓                ↓              ↓              ↓            ↓                    ↓                    ↓
mean       median       약간 긴코드     range               boxplot                 var            std 


■ Q-160. 위의 3명의 선수들 중에 3번째 선수는 제외했고 1번과 2번 선수중 한명을 
선택해야 한다면 어떻게 해야 되나요 ?

분산 :  데이터의 퍼짐정도를 수치화 한것
             확률변수가 기댓값으로 얼마나 떨어진 곳에 분포하는지 가늠하는 숫자 

표준편차: 분산의 제곱근 값으로 이 값을 통하여 평균에 흩어진
정도를 확인할 수 있습니다.

var(x1) 3.333333
var(x2) 2.444444

sd(x1)   1.825742
sd(x2)  1.563472

설명: 두번째 선수가 첫번째 선수보다 점수의 폭이 크지 않고 
일관된 형태를 보이고 있다.

 표준편차는 데이터가 정규분포를 따른다는 가정하에 주어진 값이
 얼마나 평균으로 부터 멀리 떨어졌는지를 빠르게 평가할 때 사용합니다.

 정규분포 68%  ---> 평균으로 부터 1 표준편차
 정규분포 95%  ---> 평균으로 부터 2 표준편차
 정규분포 99.7%  ---> 평균으로 부터 3 표준편차 

■ Q-161.  중고차 가격(price) 에 대한 사분위수 그래프를 그리고  사분위수 통계치를
확인하시오 !

usedcar <- read.csv("usedcars.csv")
a <- boxplot( usedcar$price)

a$stats 
        [,1]
[1,]  5980.0      ---> 하한값
[2,] 10995.0     ---> 하한 사분위수값
[3,] 13591.5    ---> 중앙값 
[4,] 14906.0    ---> 상한 사분위값
[5,] 19995.0    ----> 상한값 

 a$out
[1] 21992 20995  4899  3800  ---> 이상치 확인 

■ Q-162. 중고차 가격의 가운데 50% 에 해당하는 데이터에 집중하기 위해서
사분위수 범위의 Q1 과 Q3 값을 확인하시오 !

quantile( usedcar$price) 

     0%     25%     50%     75%    100% 
 3800.0 10995.0 13591.5 14904.5 21992.0 
              ↑        ↑        ↑
             Q1        Q2        Q3
     하한사분위수  중앙값   상한 사분위수 

※ IQR  ?  Q1과 Q3 의 차이인 사분위수 범위 

 IQR(usedcar$price)    #  3909.5

14904.5 - 10995.0 = 3909.5

 빅데이터 기사시험 1권 2-51   InterQuartile  Range (사분위수 범위)
 사분위수 범위는 자료들의 중간 50%에 포함되는 자료의 산포도를 나타냅니다. 
 사분위수 범위는 1사분위수와 3사분위수 사이의 차이입니다. 

■ 지금까지 그린 그래프 

 1. 막대 그래프
 2. 원형 그래프
 3. 라인 그래프
 4. 히스토그램 그래프
 5. 사분위 그래프(박스 그래프)
 6. 지도 그래프
 7. 워드 클라우드 그래프
 8. 소리를 시각화  
              
■  지도 그래프 

map 패키지를 설치하고 중국지도만 확대해서 출력하시오 !

install.packages("maps")
install.packages("mapproj")
library(maps)
library(mapproj)

map("world")
map("world","china") 

■ Q-163. 미국지도를 시각화 하시오 !

map("world","usa") 

■  워드 클라우드 그리기 

 감정분석을 위한 시각화로 워드 클라우드를 사용합니다.

※ R 로 워드클라우드를 그리려면 R java 를 설치해야합니다.

1. 아래의 사이트에서 java 64비트를 다운로드 받습니다.

http://www.java.com/en/download/manual.jsp

3번째것인 offline 으로 받아서 설치하세요 ~

2. 자바 설치시 대상 폴더 변경으로 설치 
3. 아래와 같이 환경 설정을 합니다. 
Sys.setenv(JAVA_HOME="C:\\Program Files\\Java\\jre1.8.0_281")

4. R java 를 설치합니다.

install.packages("rJava")
library(rJava)

■ Q-164. (오늘의 마지막 문제)  jobs.txt 를 워드 클라우드로 시각화 하시오 !

library(rlang)
library(rJava)
library(KoNLP)
library(wordcloud)
library(plyr)
